
==================== FINAL INTERFACE ====================
2018-09-29 13:53:46.120314311 UTC

interface main:Main 8043
  interface hash: 5e8d9a870455110c91d839ea43846d3c
  ABI hash: 0893a31cba2b660e0345bdba7e3b81ce
  export-list hash: 347a2c1521dc5fee9a8b82c840cf116f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 820504806471c1de5d901cf9bb8e420c
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.distanciaEntre
  Main.find
  Main.main
  Main.moveNaDirecao
  Main.Associacao
  Main.Coordenada
  Main.Direcao{Main.Leste Main.Norte Main.Oeste Main.Sul}
  Main.Ponto{Main.Ponto}
  Main.PontoImprimivel{Main.PontoImprimivel}
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Float 99c69d365bb2607725a22530ce1ca4b4
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO 1c239be44126f7b1ba512ea61300f4dc
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
d4e08ba0c682a7e6779f8afae310693f
  $fShowPontoImprimivel :: GHC.Show.Show Main.PontoImprimivel
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Main.PontoImprimivel
                  Main.$fShowPontoImprimivel_$cshowsPrec
                  Main.$fShowPontoImprimivel_$cshow
                  Main.$fShowPontoImprimivel_$cshowList -}
d4e08ba0c682a7e6779f8afae310693f
  $fShowPontoImprimivel1 :: Main.PontoImprimivel -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>,
     Unfolding: (\ (w :: Main.PontoImprimivel) ->
                 case w of ww { Main.PontoImprimivel ww1 ww2 ->
                 Main.$w$cshowsPrec 0# ww1 ww2 }) -}
9b6923d9fe00e0f7f8a10ba1f428aabe
  $fShowPontoImprimivel2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PontoImprimivel "#) -}
4c9816b6740d0b1b414688caa056e55e
  $fShowPontoImprimivel3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
10641febfd34cf20ef13c8c107c40e97
  $fShowPontoImprimivel4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
d4e08ba0c682a7e6779f8afae310693f
  $fShowPontoImprimivel_$cshow ::
    Main.PontoImprimivel -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Main.PontoImprimivel) ->
                 Main.$fShowPontoImprimivel_$cshowsPrec
                   Main.$fShowPontoImprimivel4
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d4e08ba0c682a7e6779f8afae310693f
  $fShowPontoImprimivel_$cshowList ::
    [Main.PontoImprimivel] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [Main.PontoImprimivel]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ Main.PontoImprimivel
                   Main.$fShowPontoImprimivel1
                   ls
                   s) -}
d4e08ba0c682a7e6779f8afae310693f
  $fShowPontoImprimivel_$cshowsPrec ::
    GHC.Types.Int -> Main.PontoImprimivel -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Main.PontoImprimivel) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.PontoImprimivel ww3 ww4 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 } }) -}
95f825fa3a79bb2de6d4d2f6b1c77607
  $tc'Leste :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14352032224626029787##
                   13825689761636780232##
                   Main.$trModule
                   Main.$tc'Leste2
                   0#
                   Main.$tc'Leste1) -}
80f44aa4db7f824c3d6635fed5328532
  $tc'Leste1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m1, Inline: [~] -}
387e58994676be7405cafc8c77d444dc
  $tc'Leste2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Leste3) -}
87aaf13fc013c098cb90ab19b5ce9666
  $tc'Leste3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Leste"#) -}
9bca28b8804ddc7a0d76b72efc57187a
  $tc'Norte :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11606879349516386612##
                   7325719907704537414##
                   Main.$trModule
                   Main.$tc'Norte1
                   0#
                   Main.$tc'Leste1) -}
33bc5a0067e4cc689a8e4dcd78e975c2
  $tc'Norte1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Norte2) -}
a53e15950b9a42a2f526db2add7dbd17
  $tc'Norte2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Norte"#) -}
d4fc8090d22f7ad8f89ae5a646be2647
  $tc'Oeste :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13740947928480866058##
                   14090866414636816219##
                   Main.$trModule
                   Main.$tc'Oeste1
                   0#
                   Main.$tc'Leste1) -}
8bdb9d53ad4cf11fa0080b4660666aa3
  $tc'Oeste1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Oeste2) -}
59750329df986798c9aa02eb38bbe4e4
  $tc'Oeste2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Oeste"#) -}
ba52acfd1affdc5a2d7f78ef02eec772
  $tc'Ponto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2225535963688522849##
                   5867053358116598578##
                   Main.$trModule
                   Main.$tc'Ponto2
                   0#
                   Main.$tc'Ponto1) -}
15a004b39216907f867bfa352eecb7ca
  $tc'Ponto1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2346d4e26dae9ee637b7a2feadce8beb
  $tc'Ponto2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Ponto3) -}
af1ccdf1e3209a2284e793af040dc50c
  $tc'Ponto3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Ponto"#) -}
4eb4edbecd858763be83657a0379bed9
  $tc'PontoImprimivel :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17087322146273206753##
                   16751637788446521510##
                   Main.$trModule
                   Main.$tc'PontoImprimivel2
                   0#
                   Main.$tc'PontoImprimivel1) -}
d6589d7c65a965d50edec33600fbab48
  $tc'PontoImprimivel1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
586029dd0dd5758324d45385c4a5d101
  $tc'PontoImprimivel2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'PontoImprimivel3) -}
91452f9be4db3381c939a1737b22dd8b
  $tc'PontoImprimivel3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'PontoImprimivel"#) -}
13123f376dc5959b5aee1ae97d0da88e
  $tc'Sul :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6137249551490621460##
                   5706639963434630068##
                   Main.$trModule
                   Main.$tc'Sul1
                   0#
                   Main.$tc'Leste1) -}
3da687b73fbe99543798bdb966c7fc7a
  $tc'Sul1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Sul2) -}
1d3738e26fcd80ca000421f94e186f24
  $tc'Sul2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Sul"#) -}
15a359f4cbe2ad4131315486fe2bb263
  $tcDirecao :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8414002163046092087##
                   10095660920062203669##
                   Main.$trModule
                   Main.$tcDirecao1
                   0#
                   GHC.Types.krep$*) -}
099f075ce9cb3b4b0ca0ec1229db151f
  $tcDirecao1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcDirecao2) -}
6a210662fa41ba27f419add572cd615f
  $tcDirecao2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Direcao"#) -}
0e6adbd142ff62d7ce1394d48dc4f7f6
  $tcPonto :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14340580026505508796##
                   17651852010807109672##
                   Main.$trModule
                   Main.$tcPonto1
                   0#
                   GHC.Types.krep$*) -}
318f00c699b186bece9255a01b7aa5a8
  $tcPonto1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcPonto2) -}
5b1ca0d118beb98c3e7f91b5062a7dc4
  $tcPonto2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Ponto"#) -}
1491ca7a58a46ae52e6c7b808950c927
  $tcPontoImprimivel :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2479614685705520983##
                   5070404720913000344##
                   Main.$trModule
                   Main.$tcPontoImprimivel1
                   0#
                   GHC.Types.krep$*) -}
3ab3704a47d3aab8024f5a1188e26bde
  $tcPontoImprimivel1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcPontoImprimivel2) -}
2fba69b81ff3639bad86807a1f976526
  $tcPontoImprimivel2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("PontoImprimivel"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
8cbf96df61df3434ad782e7507070893
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Double -> GHC.Types.Double -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U(U)><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Double)
                   (ww2 :: GHC.Types.Double) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww3 { GHC.Types.D# ww4 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble2
                       Main.$fShowPontoImprimivel3
                       ww4 }
                 } in
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww3 { GHC.Types.D# ww4 ->
                     GHC.Float.$w$sshowSignedFloat
                       GHC.Float.$fShowDouble2
                       Main.$fShowPontoImprimivel3
                       ww4 }
                 } in
                 case GHC.Prim.>=# ww 11# of lwild {
                   DEFAULT
                   -> \ (x :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        Main.$fShowPontoImprimivel2
                        (f (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x)))
                   1#
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Main.$fShowPontoImprimivel2
                           (f (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.showSpace1
                                 (g (GHC.Types.: @ GHC.Types.Char GHC.Show.$fShow(,)2 x))))) }) -}
d288ccb45cdaba4b9c8bec3b0e5c6bba
  type Associacao k v = [(k, v)]
15133eee972662c8a02f335c7c964392
  type Coordenada = (GHC.Types.Int, GHC.Types.Int)
f2556cea475436393627ee05f482d3cb
  data Direcao = Norte | Sul | Leste | Oeste
3070c9708f6abbd6d11b64f5246a9991
  data Ponto = Ponto GHC.Types.Double GHC.Types.Double
d4e08ba0c682a7e6779f8afae310693f
  data PontoImprimivel
    = PontoImprimivel GHC.Types.Double GHC.Types.Double
4f622cbf3a8dc43536a29828085b0a76
  distanciaEntre :: Main.Ponto -> Main.Ponto -> GHC.Types.Double
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)S(S)),1*U(1*U(U),1*U(U))><S(S(S)S(S)),1*U(1*U(U),1*U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: Main.Ponto) (ds1 :: Main.Ponto) ->
                 case ds of wild { Main.Ponto x y ->
                 case ds1 of wild1 { Main.Ponto x2 y2 ->
                 case x of wild2 { GHC.Types.D# x1 ->
                 case x2 of wild3 { GHC.Types.D# y1 ->
                 case y of wild4 { GHC.Types.D# x3 ->
                 case y2 of wild5 { GHC.Types.D# y3 ->
                 let {
                   x4 :: GHC.Prim.Double# = GHC.Prim.-## x3 y3
                 } in
                 let {
                   x5 :: GHC.Prim.Double# = GHC.Prim.-## x1 y1
                 } in
                 GHC.Types.D#
                   (GHC.Prim.sqrtDouble#
                      (GHC.Prim.+##
                         (GHC.Prim.*## x5 x5)
                         (GHC.Prim.*## x4 x4))) } } } } } }) -}
26d74de840e10c21b1064bcbc1cf2862
  find :: GHC.Classes.Eq k => k -> Main.Associacao k v -> v
  {- Arity: 3, Strictness: <S(C(C(S))L),U(C(C1(U)),A)><L,U><S,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ k
                   @ v
                   ($dEq :: GHC.Classes.Eq k)
                   (k1 :: k)
                   (dicionario :: Main.Associacao k v) ->
                 letrec {
                   go :: [(k, v)] -> v <join 1> {- Arity: 1 -}
                   = \ (ds :: [(k, v)]) ->
                     case ds of wild {
                       [] -> GHC.List.badHead @ v
                       : y ys
                       -> case y of wild1 { (,) kArmazenado v1 ->
                          case GHC.Classes.== @ k $dEq k1 kArmazenado of wild2 {
                            GHC.Types.False -> go ys GHC.Types.True -> v1 } } }
                 } in
                 go dicionario) -}
019340907f962cdf9f4efc1a5dcf40a4
  main :: GHC.Types.IO ()
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
849443db745b98031e5448647a93f54c
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True) -}
279c978f793e047d51e01b795abce891
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main3) -}
80494ff25aec3ca8c8a0188b6f90c0c3
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hello world"#) -}
73e06be1165cfe1316793b7f56177618
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
a27c86682396455da18559277aeeb5d1
  moveNaDirecao :: Main.Direcao -> Main.Coordenada -> Main.Coordenada
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Main.Direcao) (w1 :: Main.Coordenada) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case w of wild {
                   Main.Norte
                   -> (ww1,
                       case ww2 of wild1 { GHC.Types.I# x ->
                       GHC.Types.I# (GHC.Prim.+# x 1#) })
                   Main.Sul
                   -> (ww1,
                       case ww2 of wild1 { GHC.Types.I# x ->
                       GHC.Types.I# (GHC.Prim.-# x 1#) })
                   Main.Leste
                   -> (case ww1 of wild1 { GHC.Types.I# x ->
                       GHC.Types.I# (GHC.Prim.+# x 1#) },
                       ww2)
                   Main.Oeste
                   -> (case ww1 of wild1 { GHC.Types.I# x ->
                       GHC.Types.I# (GHC.Prim.-# x 1#) },
                       ww2) } }) -}
instance [safe] GHC.Show.Show [Main.PontoImprimivel]
  = Main.$fShowPontoImprimivel
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

