
==================== FINAL INTERFACE ====================
2018-09-29 13:02:12.243974253 UTC

interface main:Main 8043
  interface hash: 87fa8f2d55de503ad8a63ec88feed200
  ABI hash: 18cd172c07e0fd1c24a184895d07789d
  export-list hash: dc1a62f84a64046a32c45673275c3ff3
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 261bb34f5c38a81fa6b15773f7b7c75e
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.dobra
  Main.main
  Main.somaUm
module dependencies:
package dependencies: base-4.11.1.0* ghc-prim-0.5.2.0
                      integer-gmp-1.0.2.0
orphans: base-4.11.1.0:GHC.Float base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity base-4.11.1.0:Data.Monoid
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:GHC.Generics
                         base-4.11.1.0:GHC.IO.Exception
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO 1c239be44126f7b1ba512ea61300f4dc
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
2b2233efd35e8e096445195bb2af642d
  dobra :: GHC.Num.Num a => a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLC(C(S))LLLL),U(A,A,1*C1(C1(U)),A,A,A,1*C1(U))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) (x :: a) ->
                 GHC.Num.*
                   @ a
                   $dNum
                   (GHC.Num.fromInteger @ a $dNum Main.dobra1)
                   x) -}
c406299c278dfec339ddea13e32fffd9
  dobra1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
76470655492e58a5b0faae06ab4ca422
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
1f03fb1543fdf8ae61d76f907d13456f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main5
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main4
                        GHC.Types.True
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv2 } }) -}
de97bfe3927aa904b78abded77a822ec
  main2 :: GHC.Base.String
  {- Unfolding: (GHC.Show.$fShowInteger_$cshowList
                   (Main.main_go Main.main3)
                   (GHC.Types.[] @ GHC.Types.Char)) -}
965fbae6943742514d34d1ac685005e1
  main3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
9560bc0f4c38524c13ddda4f9134e28c
  main4 :: GHC.Base.String
  {- Unfolding: (GHC.Show.$fShowInteger_$cshowList
                   (Main.main_go1 Main.main3)
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7df47534b9a202284b0f2c4f6483cc35
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main6) -}
150396438663bf703bc4b951f67fcf2b
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("hello world"#) -}
a76c9205efd29033541c3c4ae2804297
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
f421c25e6fd2ae012f96b1cff04d871f
  main_go :: GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,U> -}
9e4a5a96bcf5647dc72e9a6a0424b7c9
  main_go1 :: GHC.Integer.Type.Integer -> [GHC.Integer.Type.Integer]
  {- Arity: 1, Strictness: <S,U> -}
69e7f03aaa367659ec9128c1a5f8e679
  somaUm :: GHC.Num.Num a => a -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(C(C(S))LLLLLL),U(1*C1(C1(U)),A,A,A,A,A,1*C1(U))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dNum :: GHC.Num.Num a) (x :: a) ->
                 GHC.Num.+
                   @ a
                   $dNum
                   x
                   (GHC.Num.fromInteger @ a $dNum Main.main3)) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

